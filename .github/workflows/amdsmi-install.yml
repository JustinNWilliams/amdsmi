name: Build and Install amdsmi for Multiple OS Versions  
  
on:  
  push:  
  
jobs:  
  build-and-install-deb:  
    name: Build and Install on Debian-based Systems  
    runs-on: [self-hosted, Linux, X64, dev, ubuntu20.04]  
    strategy:  
      matrix:  
        os:  
          - ubuntu20  
          - ubuntu22  
          - ubuntu24  
        include:  
          - os: ubuntu20  
            docker_image: compute-artifactory.amd.com:5000/rocm-base-images/ubuntu-20.04-bld:2024091101  
            build_tests: OFF  
            enable_esmi_lib: OFF  
          - os: ubuntu22  
            docker_image: compute-artifactory.amd.com:5000/rocm-base-images/ubuntu-22.04-bld:2024091101  
            build_tests: OFF  
            enable_esmi_lib: OFF  
          - os: ubuntu24  
            docker_image: compute-artifactory.amd.com:5000/rocm-base-images/ubuntu-24.04-bld:2024091101  
            build_tests: OFF  
            enable_esmi_lib: OFF  
  
    steps:  
      - name: Checkout Repository  
        uses: actions/checkout@v3  
        with:
          clean: false
  
      - name: Build and Install on ${{ matrix.os }}  
        uses: addnab/docker-run-action@v3  
 
        with:  
          image: ${{ matrix.docker_image }}  
          options: >  
            --privileged  
            -v ${{ github.workspace }}:/src:rw  
          run: |  
            set -e  
            cd /src  
            echo 'Inside Docker Container on ${{ matrix.os }}'  
    
            # Build AMD-SMI  
            BUILD_FOLDER=/src/build  
            DEB_BUILD="amd-smi-lib*99999-local_amd64.deb"  
            DEB_BUILD_TEST="amd-smi-lib-tests*99999-local_amd64.deb"  
    
            # Remove existing build folder if it exists  
            sudo rm -rf $BUILD_FOLDER  
            mkdir -p $BUILD_FOLDER  
            cd $BUILD_FOLDER  
            cmake .. -DBUILD_TESTS=${{ matrix.build_tests }} -DENABLE_ESMI_LIB=${{ matrix.enable_esmi_lib }}  
            make -j $(nproc)  
            make package  
    
            # Install AMD-SMI  
            sudo apt install -y $BUILD_FOLDER/$DEB_BUILD  
            sudo ln -s /opt/rocm/bin/amd-smi /usr/local/bin  
    
            # Check If Installed  
            python3 -m pip list | grep amd  
            python3 -m pip list | grep pip  
            python3 -m pip list | grep setuptools  

  # Uncomment and adjust the following section for RPM-based systems if needed  
  # build-and-install-rpm:  
  #   name: Build and Install on RPM-based Systems  
  #   runs-on: [self-hosted, Linux, X64, dev, ubuntu20.04]  
  #   strategy:  
  #     matrix:  
  #       include:  
  #         - os: sles  
  #           docker_image: "compute-artifactory.amd.com:5000/rocm-base-images/sles-15.5:2024091101"  
  #           package_manager: zypper  
  #           build_tests: OFF  
  #           enable_esmi_lib: OFF  
  #         # Add other OS configurations as needed  
  
  #   steps:  
  #     - name: Checkout Repository  
  #       uses: actions/checkout@v3  
  
  #     - name: Build and Install on ${{ matrix.os }}  
  #       # Adjust build steps here  
