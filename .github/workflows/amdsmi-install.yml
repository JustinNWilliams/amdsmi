name: Build and Install amdsmi for Multiple OS Versions  
  
on:  
  push:  
  
jobs:  
  build-and-install:  
    name: Build and Install on Multiple Ubuntu Versions  
    runs-on: [self-hosted, Linux, X64, dev, ubuntu20.04]  
    steps:  
      # Checkout the repository once  
      - name: Checkout Repository  
        uses: actions/checkout@v3  
  
      # Build and Install on Ubuntu 20.04  
      - name: Build and Install on Ubuntu 20.04  
        uses: addnab/docker-run-action@v3  
        with:  
          image: compute-artifactory.amd.com:5000/rocm-base-images/ubuntu-20.04-bld:2024091101  
          options: >  
            --privileged  
            -v ${{ github.workspace }}:/src  
          run: |  
            set -e  
            cd /src  
            echo 'Inside Docker Container on Ubuntu 20.04'  
    
            # Create a non-root user inside the container  
            useradd -m builder  
            chown -R builder /src  
    
            # Switch to the non-root user  
            su builder -c "  
              set -e  
              cd /src  
    
              # Build AMD-SMI  
              BUILD_FOLDER=/src/build_20  
              DEB_BUILD=\"amd-smi-lib*99999-local_amd64.deb\"  
    
              # Remove existing build folder if it exists  
              rm -rf \$BUILD_FOLDER  
              mkdir -p \$BUILD_FOLDER  
              cd \$BUILD_FOLDER  
              cmake .. -DBUILD_TESTS=OFF -DENABLE_ESMI_LIB=OFF  
              make -j \$(nproc)  
              make package  
            "  
    
            # Install AMD-SMI (requires root)  
            apt install -y \$BUILD_FOLDER/\$DEB_BUILD  
            ln -s /opt/rocm/bin/amd-smi /usr/local/bin  
    
            # Check If Installed  
            python3 -m pip list | grep amd  
  
      # Build and Install on Ubuntu 22.04  
      - name: Build and Install on Ubuntu 22.04  
        uses: addnab/docker-run-action@v3  
        with:  
          image: compute-artifactory.amd.com:5000/rocm-base-images/ubuntu-22.04-bld:2024091101  
          options: >  
            --privileged  
            -v ${{ github.workspace }}:/src  
          run: |  
            set -e  
            cd /src  
            echo 'Inside Docker Container on Ubuntu 22.04'  
    
            # Create a non-root user inside the container  
            useradd -m builder  
            chown -R builder /src  
    
            # Switch to the non-root user  
            su builder -c "  
              set -e  
              cd /src  
    
              # Build AMD-SMI  
              BUILD_FOLDER=/src/build_22  
              DEB_BUILD=\"amd-smi-lib*99999-local_amd64.deb\"  
    
              # Remove existing build folder if it exists  
              rm -rf \$BUILD_FOLDER  
              mkdir -p \$BUILD_FOLDER  
              cd \$BUILD_FOLDER  
              cmake .. -DBUILD_TESTS=OFF -DENABLE_ESMI_LIB=OFF  
              make -j \$(nproc)  
              make package  
            "  
    
            # Install AMD-SMI (requires root)  
            apt install -y \$BUILD_FOLDER/\$DEB_BUILD  
            ln -s /opt/rocm/bin/amd-smi /usr/local/bin  
    
            # Check If Installed  
            python3 -m pip list | grep amd  
  
      # Build and Install on Ubuntu 24.04  
      - name: Build and Install on Ubuntu 24.04  
        uses: addnab/docker-run-action@v3  
        with:  
          image: compute-artifactory.amd.com:5000/rocm-base-images/ubuntu-24.04-bld:2024091101  
          options: >  
            --privileged  
            -v ${{ github.workspace }}:/src  
          run: |  
            set -e  
            cd /src  
            echo 'Inside Docker Container on Ubuntu 24.04'  
    
            # Create a non-root user inside the container  
            useradd -m builder  
            chown -R builder /src  
    
            # Switch to the non-root user  
            su builder -c "  
              set -e  
              cd /src  
    
              # Build AMD-SMI  
              BUILD_FOLDER=/src/build_24  
              DEB_BUILD=\"amd-smi-lib*99999-local_amd64.deb\"  
    
              # Remove existing build folder if it exists  
              rm -rf \$BUILD_FOLDER  
              mkdir -p \$BUILD_FOLDER  
              cd \$BUILD_FOLDER  
              cmake .. -DBUILD_TESTS=OFF -DENABLE_ESMI_LIB=OFF  
              make -j \$(nproc)  
              make package  
            "  
    
            # Install AMD-SMI (requires root)  
            apt install -y \$BUILD_FOLDER/\$DEB_BUILD  
            ln -s /opt/rocm/bin/amd-smi /usr/local/bin  
    
            # Check If Installed  
            python3 -m pip list | grep amd  
            python3 -m pip list | grep pip  
            python3 -m pip list | grep setuptools  

  # Uncomment and adjust the following section for RPM-based systems if needed  
  # build-and-install-rpm:  
  #   name: Build and Install on RPM-based Systems  
  #   runs-on: [self-hosted, Linux, X64, dev, ubuntu20.04]  
  #   strategy:  
  #     matrix:  
  #       include:  
  #         - os: sles  
  #           docker_image: "compute-artifactory.amd.com:5000/rocm-base-images/sles-15.5:2024091101"  
  #           package_manager: zypper  
  #           build_tests: OFF  
  #           enable_esmi_lib: OFF  
  #         # Add other OS configurations as needed  
  
  #   steps:  
  #     - name: Checkout Repository  
  #       uses: actions/checkout@v3  
  
  #     - name: Build and Install on ${{ matrix.os }}  
  #       # Adjust build steps here  
